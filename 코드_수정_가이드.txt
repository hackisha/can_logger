# can_logger 프로젝트 코드 수정 및 유지보수 가이드

이 문서는 `can_logger` 프로젝트의 프론트엔드(웹 대시보드)와 백엔드(파이썬 스크립트) 코드를 수정하고, 변경사항을 적용하는 방법을 안내합니다.

---
### A. 프론트엔드 (웹 대시보드) 수정 방법
---
**목표:** 웹사이트의 디자인, 레이아웃, 기능 등 시각적인 부분을 변경합니다.
**핵심 원리:** 라즈베리파이에서 코드를 수정하고 `git push`를 하면, GitHub Actions가 자동으로 웹사이트를 업데이트합니다.

**1. 코드 수정:**
   *   라즈베리파이의 `/home/pi/can_logger/dashboard/` 폴더로 이동합니다.
   *   `dashboard.html` 또는 `gragh.html` 파일을 열어 원하는 대로 HTML, CSS, JavaScript 코드를 수정합니다.

**2. 변경사항 GitHub에 업로드 (자동 배포 트리거):**
   *   라즈베리파이의 터미널에서 아래 명령어들을 순서대로 실행합니다.

   ```bash
   # 1. 변경된 모든 파일을 Git에 등록합니다.
   git add .

   # 2. 변경 내용을 설명하는 메시지와 함께 저장(커밋)합니다.
   #    메시지는 "따옴표 안에" 자유롭게 작성하세요. (예: "��인 게이지 색상 변경")
   git commit -m "여기에 변경 내용 요약 작성"

   # 3. GitHub 저장소로 변경사항을 업로드(푸시)합니다.
   git push
   ```

**3. 확인:**
   *   `git push`가 완료되면 자동 배포가 시작됩니다.
   *   PC에서 [hackisha/can_logger Actions 탭](https://github.com/hackisha/can_logger/actions)으로 이동하여 배포 과정을 실시간으로 확인할 수 있습니다. (약 1~2분 소요)
   *   배포가 완료되면 웹 브라우저에서 아래 주소로 접속하여 변경사항을 확인합니다. (필요시 새로고침: Ctrl+F5)
     *   `https://emucanlogger.web.app/dashboard.html`
     *   `https://emucanlogger.web.app/gragh.html`

---
### B. 백엔드 (파이썬 로거) 수정 방법
---
**목표:** CAN 데이터 처리 방식, Firebase에 저장되는 데이터 형식 등 로직 부분을 변경합니다.
**핵심 원리:** 코드 수정 후 `git push`로 백업하고, 라즈베리파이에서 실행 중인 서비스를 **수동으로 재시작**하여 변경사항을 적용해야 합니다.

**1. 코드 수정:**
   *   라즈베리파이의 `/home/pi/can_logger/` 폴더로 이동합니다.
   *   `can_logger_firebase.py` 파일을 열어 파이썬 코드를 수정합니다.

**2. 변경사항 GitHub에 업로드 (코드 백업 및 공유):**
   *   프론트엔드와 동일하게, 터미널에서 아래 명령어를 실행하여 GitHub에 최신 코드를 저장합니다.
   ```bash
   git add .
   git commit -m "파이썬 로깅 로직 수정"
   git push
   ```
   *   **중요:** 이 단계는 코드를 백업하는 과정일 뿐, 라즈베리파이에서 실행 중인 프로그램에는 아직 적용되지 않습니다.

**3. 실행 중인 서비스에 변경사항 적용:**
   *   부팅 시 자동으로 실행되도록 설정된 `can-logger` 서비스를 재시작하여 수정된 코드를 불러와야 합니다.
   *   터미널에서 아래 명령어를 실행합니다.

   ```bash
   # 서비스를 재시작하여 최신 코드를 적용합니다.
   sudo systemctl restart can-logger.service
   ```

**4. 확인:**
   *   서비스가 정상적으로 재시작되었는지, 수정된 코드가 오류 없이 잘 동작하는지 아래 명령어로 로그를 확인합니다.
   ```bash
   # 실시간으로 로그 확인 (종료는 Ctrl+C)
   journalctl -u can-logger.service -f

   # 문제가 있다면 전체 로그를 확인하여 원인을 파악합니다.
   journalctl -u can-logger.service
   ```

---
**요약:**
*   **모든 수정은 라즈베리파이에서 시작하고 `git push`로 마무리합니다.**
*   **웹사이트 변경**은 `git push`만 하면 **자동으로 반영**됩니다.
*   **파이썬 로거 변경**은 `git push` 후에 **`sudo systemctl restart can-logger.service`** 명령어를 추가로 실행해야 **반영**됩니다.
